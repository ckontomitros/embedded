/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xsobel.h"
#define SIZE	1024
int main()
{
	char input[SIZE][SIZE];
	int i,j;

    print("Hello World\n\r");
    for(i=0;i<SIZE;i++)
    	for(j=0;j<SIZE;j++)
    		input[i][j]=i;


    int status;
    	printf("PSNR of original Sobel and computed Sobel image, PSNR1\n");
    	status=XSobel_Initialize(&InstancePtr, XPAR_SOBEL_0_DEVICE_ID);
    		if(status!=XST_SUCCESS)
    			exit(-1);
    		printf("PSNR of original Sobel and computed Sobel image, PSNR2 \n");
    		XSobel_Set_input_r(&InstancePtr,(u32)input);
    		printf("PSNR of original Sobel and computed Sobel image, PSNR3\n");
    		if (XSobel_IsReady(&InstancePtr))
    		      print("HLS peripheral is ready.  Starting... ");
    		   else {
    		      print("!!! HLS peripheral is not ready! Exiting...\n\r");
    		      exit(-1);
    		   }
    		char * routput;
    		XSobel_Start(&InstancePtr);
    		printf("PSNR of original Sobel and computed Sobel image, PSNR\n");
    		do {

    		 } while (!XSobel_IsReady(&InstancePtr));
    		routput=XSobel_Get_output_r(&InstancePtr);
    		printf("PSNR of orig333inal Sobel and computed Sobel image, PSNR\n");


    	/* Now run through the output and the golden output to calculate *
    	 * the MSE and then the PSNR.									 */
    	for (i=191; i<SIZE-1; i++) {
    		for ( j=1; j<SIZE-1; j++ ) {
    			//printf("PSNR5 %d\n",output[4025]);
    			//t = pow((output[i*SIZE+j] - golden[i*SIZE+j]),2);
    			printf("PSNR %d   %d    %d   %d\n",i*SIZE+j,i,j,routput[i*SIZE+j]);
    			//PSNR += t;
    		}
    	}
    return 0;
}
