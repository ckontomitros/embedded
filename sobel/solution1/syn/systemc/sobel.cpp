// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<151> sobel::ap_ST_fsm_state1 = "1";
const sc_lv<151> sobel::ap_ST_fsm_state2 = "10";
const sc_lv<151> sobel::ap_ST_fsm_state3 = "100";
const sc_lv<151> sobel::ap_ST_fsm_state4 = "1000";
const sc_lv<151> sobel::ap_ST_fsm_state5 = "10000";
const sc_lv<151> sobel::ap_ST_fsm_state6 = "100000";
const sc_lv<151> sobel::ap_ST_fsm_state7 = "1000000";
const sc_lv<151> sobel::ap_ST_fsm_state8 = "10000000";
const sc_lv<151> sobel::ap_ST_fsm_state9 = "100000000";
const sc_lv<151> sobel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<151> sobel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<151> sobel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<151> sobel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state131 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state132 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state133 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state134 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state135 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state136 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state137 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state138 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state139 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state140 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state141 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state142 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state143 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state144 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state145 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state146 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state147 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state148 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state149 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state150 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<151> sobel::ap_ST_fsm_state151 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> sobel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> sobel::ap_const_lv1_1 = "1";
const sc_lv<32> sobel::ap_const_lv32_33 = "110011";
const sc_lv<1> sobel::ap_const_lv1_0 = "0";
const sc_lv<32> sobel::ap_const_lv32_42 = "1000010";
const sc_lv<32> sobel::ap_const_lv32_41 = "1000001";
const sc_lv<32> sobel::ap_const_lv32_4C = "1001100";
const sc_lv<32> sobel::ap_const_lv32_90 = "10010000";
const sc_lv<32> sobel::ap_const_lv32_1 = "1";
const sc_lv<32> sobel::ap_const_lv32_3 = "11";
const sc_lv<32> sobel::ap_const_lv32_4 = "100";
const sc_lv<32> sobel::ap_const_lv32_6 = "110";
const sc_lv<32> sobel::ap_const_lv32_B = "1011";
const sc_lv<32> sobel::ap_const_lv32_11 = "10001";
const sc_lv<32> sobel::ap_const_lv32_30 = "110000";
const sc_lv<32> sobel::ap_const_lv32_31 = "110001";
const sc_lv<32> sobel::ap_const_lv32_32 = "110010";
const sc_lv<32> sobel::ap_const_lv32_34 = "110100";
const sc_lv<32> sobel::ap_const_lv32_35 = "110101";
const sc_lv<32> sobel::ap_const_lv32_36 = "110110";
const sc_lv<32> sobel::ap_const_lv32_3B = "111011";
const sc_lv<32> sobel::ap_const_lv32_46 = "1000110";
const sc_lv<32> sobel::ap_const_lv32_6B = "1101011";
const sc_lv<32> sobel::ap_const_lv32_8A = "10001010";
const sc_lv<10> sobel::ap_const_lv10_1 = "1";
const sc_lv<32> sobel::ap_const_lv32_2 = "10";
const sc_lv<32> sobel::ap_const_lv32_47 = "1000111";
const sc_lv<32> sobel::ap_const_lv32_5 = "101";
const sc_lv<64> sobel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> sobel::ap_const_lv8_0 = "00000000";
const sc_lv<8> sobel::ap_const_lv8_FF = "11111111";
const sc_lv<64> sobel::ap_const_lv64_3EB0000000000000 = "11111010110000000000000000000000000000000000000000000000000000";
const sc_lv<64> sobel::ap_const_lv64_3FDBCB7B1526E50E = "11111111011011110010110111101100010101001001101110010100001110";
const sc_lv<64> sobel::ap_const_lv64_4024000000000000 = "100000000100100000000000000000000000000000000000000000000000000";
const sc_lv<32> sobel::ap_const_lv32_3C = "111100";
const sc_lv<32> sobel::ap_const_lv32_8B = "10001011";
const sc_lv<32> sobel::ap_const_lv32_91 = "10010001";
const sc_lv<64> sobel::ap_const_lv64_40F0000000000000 = "100000011110000000000000000000000000000000000000000000000000000";
const sc_lv<32> sobel::ap_const_lv32_4D = "1001101";
const sc_lv<32> sobel::ap_const_lv32_C = "1100";
const sc_lv<32> sobel::ap_const_lv32_12 = "10010";
const sc_lv<32> sobel::ap_const_lv32_6C = "1101100";
const sc_lv<10> sobel::ap_const_lv10_3FF = "1111111111";
const sc_lv<10> sobel::ap_const_lv10_0 = "0000000000";
const sc_lv<20> sobel::ap_const_lv20_3FF = "1111111111";
const sc_lv<32> sobel::ap_const_lv32_3F = "111111";
const sc_lv<32> sobel::ap_const_lv32_3E = "111110";
const sc_lv<12> sobel::ap_const_lv12_C01 = "110000000001";
const sc_lv<11> sobel::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> sobel::ap_const_lv32_53 = "1010011";
const sc_lv<32> sobel::ap_const_lv32_8 = "1000";
const sc_lv<32> sobel::ap_const_lv32_1F = "11111";
const sc_lv<24> sobel::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> sobel::ap_const_lv32_7 = "111";
const sc_lv<32> sobel::ap_const_lv32_9 = "1001";
const sc_lv<32> sobel::ap_const_lv32_A = "1010";
const sc_lv<32> sobel::ap_const_lv32_96 = "10010110";

sobel::sobel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    horiz_operator_U = new sobel_horiz_operacud("horiz_operator_U");
    horiz_operator_U->clk(ap_clk);
    horiz_operator_U->reset(ap_rst);
    horiz_operator_U->address0(grp_convolution2D_fu_214_operator_address0);
    horiz_operator_U->ce0(grp_convolution2D_fu_214_operator_ce0);
    horiz_operator_U->q0(horiz_operator_q0);
    vert_operator_U = new sobel_vert_operator("vert_operator_U");
    vert_operator_U->clk(ap_clk);
    vert_operator_U->reset(ap_rst);
    vert_operator_U->address0(grp_convolution2D_fu_214_operator_address0);
    vert_operator_U->ce0(grp_convolution2D_fu_214_operator_ce0);
    vert_operator_U->q0(vert_operator_q0);
    grp_convolution2D_fu_214 = new convolution2D("grp_convolution2D_fu_214");
    grp_convolution2D_fu_214->ap_clk(ap_clk);
    grp_convolution2D_fu_214->ap_rst(ap_rst);
    grp_convolution2D_fu_214->ap_start(grp_convolution2D_fu_214_ap_start);
    grp_convolution2D_fu_214->ap_done(grp_convolution2D_fu_214_ap_done);
    grp_convolution2D_fu_214->ap_idle(grp_convolution2D_fu_214_ap_idle);
    grp_convolution2D_fu_214->ap_ready(grp_convolution2D_fu_214_ap_ready);
    grp_convolution2D_fu_214->posy(i_2_reg_179);
    grp_convolution2D_fu_214->posx(j_reg_167);
    grp_convolution2D_fu_214->input_r_address0(grp_convolution2D_fu_214_input_r_address0);
    grp_convolution2D_fu_214->input_r_ce0(grp_convolution2D_fu_214_input_r_ce0);
    grp_convolution2D_fu_214->input_r_q0(input_r_q0);
    grp_convolution2D_fu_214->operator_address0(grp_convolution2D_fu_214_operator_address0);
    grp_convolution2D_fu_214->operator_ce0(grp_convolution2D_fu_214_operator_ce0);
    grp_convolution2D_fu_214->operator_q0(grp_convolution2D_fu_214_operator_q0);
    grp_convolution2D_fu_214->ap_return(grp_convolution2D_fu_214_ap_return);
    sobel_dadd_64ns_6dEe_U5 = new sobel_dadd_64ns_6dEe<1,5,64,64,64>("sobel_dadd_64ns_6dEe_U5");
    sobel_dadd_64ns_6dEe_U5->clk(ap_clk);
    sobel_dadd_64ns_6dEe_U5->reset(ap_rst);
    sobel_dadd_64ns_6dEe_U5->din0(PSNR_fu_90);
    sobel_dadd_64ns_6dEe_U5->din1(reg_271);
    sobel_dadd_64ns_6dEe_U5->ce(ap_var_for_const0);
    sobel_dadd_64ns_6dEe_U5->dout(grp_fu_228_p2);
    sobel_dmul_64ns_6eOg_U6 = new sobel_dmul_64ns_6eOg<1,6,64,64,64>("sobel_dmul_64ns_6eOg_U6");
    sobel_dmul_64ns_6eOg_U6->clk(ap_clk);
    sobel_dmul_64ns_6eOg_U6->reset(ap_rst);
    sobel_dmul_64ns_6eOg_U6->din0(grp_fu_232_p0);
    sobel_dmul_64ns_6eOg_U6->din1(grp_fu_232_p1);
    sobel_dmul_64ns_6eOg_U6->ce(ap_var_for_const0);
    sobel_dmul_64ns_6eOg_U6->dout(grp_fu_232_p2);
    sobel_ddiv_64ns_6fYi_U7 = new sobel_ddiv_64ns_6fYi<1,31,64,64,64>("sobel_ddiv_64ns_6fYi_U7");
    sobel_ddiv_64ns_6fYi_U7->clk(ap_clk);
    sobel_ddiv_64ns_6fYi_U7->reset(ap_rst);
    sobel_ddiv_64ns_6fYi_U7->din0(ap_var_for_const1);
    sobel_ddiv_64ns_6fYi_U7->din1(reg_271);
    sobel_ddiv_64ns_6fYi_U7->ce(ap_var_for_const0);
    sobel_ddiv_64ns_6fYi_U7->dout(grp_fu_239_p2);
    sobel_uitodp_32nsg8j_U8 = new sobel_uitodp_32nsg8j<1,6,32,64>("sobel_uitodp_32nsg8j_U8");
    sobel_uitodp_32nsg8j_U8->clk(ap_clk);
    sobel_uitodp_32nsg8j_U8->reset(ap_rst);
    sobel_uitodp_32nsg8j_U8->din0(p_reg_642);
    sobel_uitodp_32nsg8j_U8->ce(ap_var_for_const0);
    sobel_uitodp_32nsg8j_U8->dout(grp_fu_244_p1);
    sobel_sitodp_32s_hbi_U9 = new sobel_sitodp_32s_hbi<1,6,32,64>("sobel_sitodp_32s_hbi_U9");
    sobel_sitodp_32s_hbi_U9->clk(ap_clk);
    sobel_sitodp_32s_hbi_U9->reset(ap_rst);
    sobel_sitodp_32s_hbi_U9->din0(grp_fu_247_p0);
    sobel_sitodp_32s_hbi_U9->ce(ap_var_for_const0);
    sobel_sitodp_32s_hbi_U9->dout(grp_fu_247_p1);
    sobel_dsqrt_64ns_ibs_U10 = new sobel_dsqrt_64ns_ibs<1,31,64,64,64>("sobel_dsqrt_64ns_ibs_U10");
    sobel_dsqrt_64ns_ibs_U10->clk(ap_clk);
    sobel_dsqrt_64ns_ibs_U10->reset(ap_rst);
    sobel_dsqrt_64ns_ibs_U10->din0(ap_var_for_const2);
    sobel_dsqrt_64ns_ibs_U10->din1(tmp_s_reg_647);
    sobel_dsqrt_64ns_ibs_U10->ce(ap_var_for_const0);
    sobel_dsqrt_64ns_ibs_U10->dout(grp_fu_250_p2);
    sobel_dlog_64ns_6jbC_U11 = new sobel_dlog_64ns_6jbC<1,31,64,64,64>("sobel_dlog_64ns_6jbC_U11");
    sobel_dlog_64ns_6jbC_U11->clk(ap_clk);
    sobel_dlog_64ns_6jbC_U11->reset(ap_rst);
    sobel_dlog_64ns_6jbC_U11->din0(ap_var_for_const2);
    sobel_dlog_64ns_6jbC_U11->din1(x_assign_reg_723);
    sobel_dlog_64ns_6jbC_U11->ce(ap_var_for_const0);
    sobel_dlog_64ns_6jbC_U11->dout(grp_fu_255_p2);
    sobel_mul_32s_32skbM_U12 = new sobel_mul_32s_32skbM<1,6,32,32,32>("sobel_mul_32s_32skbM_U12");
    sobel_mul_32s_32skbM_U12->clk(ap_clk);
    sobel_mul_32s_32skbM_U12->reset(ap_rst);
    sobel_mul_32s_32skbM_U12->din0(tmp_2_reg_630);
    sobel_mul_32s_32skbM_U12->din1(tmp_2_reg_630);
    sobel_mul_32s_32skbM_U12->ce(grp_fu_337_ce);
    sobel_mul_32s_32skbM_U12->dout(grp_fu_337_p2);
    sobel_mul_32s_32skbM_U13 = new sobel_mul_32s_32skbM<1,6,32,32,32>("sobel_mul_32s_32skbM_U13");
    sobel_mul_32s_32skbM_U13->clk(ap_clk);
    sobel_mul_32s_32skbM_U13->reset(ap_rst);
    sobel_mul_32s_32skbM_U13->din0(grp_convolution2D_fu_214_ap_return);
    sobel_mul_32s_32skbM_U13->din1(grp_convolution2D_fu_214_ap_return);
    sobel_mul_32s_32skbM_U13->ce(grp_fu_341_ce);
    sobel_mul_32s_32skbM_U13->dout(grp_fu_341_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state109);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state139);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state145);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state146);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state151);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state151 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state151 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state151 );

    SC_METHOD(thread_exitcond1_fu_544_p2);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( i_3_reg_191 );

    SC_METHOD(thread_exitcond2_fu_325_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_179 );

    SC_METHOD(thread_exitcond3_fu_314_p2);
    sensitive << ( j_reg_167 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond5_fu_278_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_exitcond_fu_550_p2);
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( j_1_reg_203 );

    SC_METHOD(thread_golden_address0);
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( sum_cast_fu_564_p1 );

    SC_METHOD(thread_golden_ce0);
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_grp_convolution2D_fu_214_ap_start);
    sensitive << ( ap_reg_grp_convolution2D_fu_214_ap_start );

    SC_METHOD(thread_grp_convolution2D_fu_214_operator_q0);
    sensitive << ( horiz_operator_q0 );
    sensitive << ( vert_operator_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_232_p0);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( reg_271 );
    sensitive << ( tmp_8_reg_712 );
    sensitive << ( tmp_i_i_i1_reg_728 );
    sensitive << ( PSNR_fu_90 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state146 );

    SC_METHOD(thread_grp_fu_232_p1);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( tmp_8_reg_712 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state146 );

    SC_METHOD(thread_grp_fu_247_p0);
    sensitive << ( tmp_6_reg_702 );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_grp_fu_337_ce);
    sensitive << ( grp_convolution2D_fu_214_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_341_ce);
    sensitive << ( grp_convolution2D_fu_214_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_i_1_fu_308_p2);
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_i_4_fu_576_p2);
    sensitive << ( i_3_reg_191 );

    SC_METHOD(thread_i_5_fu_538_p2);
    sensitive << ( i_2_reg_179 );

    SC_METHOD(thread_icmp_fu_501_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_14_fu_491_p4 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution2D_fu_214_input_r_address0 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution2D_fu_214_input_r_ce0 );

    SC_METHOD(thread_isNeg_fu_400_p3);
    sensitive << ( sh_assign_fu_394_p2 );

    SC_METHOD(thread_j_2_fu_331_p2);
    sensitive << ( j_reg_167 );

    SC_METHOD(thread_j_3_fu_570_p2);
    sensitive << ( j_1_reg_203 );

    SC_METHOD(thread_loc_V_1_fu_374_p1);
    sensitive << ( p_Val2_1_fu_353_p1 );

    SC_METHOD(thread_loc_V_fu_364_p4);
    sensitive << ( p_Val2_1_fu_353_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_cast_fu_292_p1 );
    sensitive << ( sum9_cast_fu_520_p1 );
    sensitive << ( icmp_fu_501_p2 );
    sensitive << ( sum7_cast_fu_533_p1 );

    SC_METHOD(thread_output_r_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( tmp_1_cast_fu_303_p1 );
    sensitive << ( sum_cast_fu_564_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_fu_501_p2 );

    SC_METHOD(thread_output_r_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_fu_501_p2 );
    sensitive << ( tmp_15_fu_507_p1 );

    SC_METHOD(thread_output_r_d1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_278_p2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_fu_501_p2 );

    SC_METHOD(thread_output_r_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_278_p2 );

    SC_METHOD(thread_p_Result_1_fu_378_p3);
    sensitive << ( loc_V_1_fu_374_p1 );

    SC_METHOD(thread_p_Val2_1_fu_353_p1);
    sensitive << ( x_assign_2_reg_652 );

    SC_METHOD(thread_p_Val2_4_fu_472_p3);
    sensitive << ( isNeg_fu_400_p3 );
    sensitive << ( tmp_5_fu_458_p1 );
    sensitive << ( tmp_7_fu_462_p4 );

    SC_METHOD(thread_p_Val2_7_i_i_fu_480_p2);
    sensitive << ( p_Val2_4_reg_662 );

    SC_METHOD(thread_p_Val2_s_fu_485_p3);
    sensitive << ( p_Result_s_reg_657 );
    sensitive << ( p_Val2_4_reg_662 );
    sensitive << ( p_Val2_7_i_i_fu_480_p2 );

    SC_METHOD(thread_p_fu_347_p2);
    sensitive << ( grp_fu_341_p2 );
    sensitive << ( grp_fu_337_p2 );

    SC_METHOD(thread_sh_assign_1_cast_fu_426_p1);
    sensitive << ( sh_assign_1_fu_418_p3 );

    SC_METHOD(thread_sh_assign_1_fu_418_p3);
    sensitive << ( sh_assign_fu_394_p2 );
    sensitive << ( isNeg_fu_400_p3 );
    sensitive << ( tmp_i_i_cast_fu_414_p1 );

    SC_METHOD(thread_sh_assign_fu_394_p2);
    sensitive << ( tmp_i_i_i_cast3_fu_390_p1 );

    SC_METHOD(thread_sum7_cast_fu_533_p1);
    sensitive << ( sum7_fu_525_p3 );

    SC_METHOD(thread_sum7_fu_525_p3);
    sensitive << ( j_reg_167 );
    sensitive << ( i_2_reg_179 );

    SC_METHOD(thread_sum9_cast_fu_520_p1);
    sensitive << ( sum9_fu_512_p3 );

    SC_METHOD(thread_sum9_fu_512_p3);
    sensitive << ( j_reg_167 );
    sensitive << ( i_2_reg_179 );

    SC_METHOD(thread_sum_cast_fu_564_p1);
    sensitive << ( sum_fu_556_p3 );

    SC_METHOD(thread_sum_fu_556_p3);
    sensitive << ( i_3_reg_191 );
    sensitive << ( j_1_reg_203 );

    SC_METHOD(thread_tmp_11_cast_fu_582_p1);
    sensitive << ( output_r_q1 );

    SC_METHOD(thread_tmp_12_cast_fu_586_p1);
    sensitive << ( golden_q0 );

    SC_METHOD(thread_tmp_13_fu_450_p3);
    sensitive << ( tmp_19_i_i_fu_438_p2 );

    SC_METHOD(thread_tmp_14_fu_491_p4);
    sensitive << ( p_Val2_s_fu_485_p3 );

    SC_METHOD(thread_tmp_15_fu_507_p1);
    sensitive << ( p_Val2_s_fu_485_p3 );

    SC_METHOD(thread_tmp_18_i_i_cast_fu_434_p1);
    sensitive << ( sh_assign_1_cast_fu_426_p1 );

    SC_METHOD(thread_tmp_18_i_i_fu_430_p1);
    sensitive << ( sh_assign_1_cast_fu_426_p1 );

    SC_METHOD(thread_tmp_19_i_i_fu_438_p2);
    sensitive << ( p_Result_1_fu_378_p3 );
    sensitive << ( tmp_18_i_i_cast_fu_434_p1 );

    SC_METHOD(thread_tmp_1_cast_fu_303_p1);
    sensitive << ( tmp_1_fu_297_p2 );

    SC_METHOD(thread_tmp_1_fu_297_p2);
    sensitive << ( tmp_fu_284_p3 );

    SC_METHOD(thread_tmp_20_i_i_fu_444_p2);
    sensitive << ( tmp_i_i_fu_386_p1 );
    sensitive << ( tmp_18_i_i_fu_430_p1 );

    SC_METHOD(thread_tmp_5_fu_458_p1);
    sensitive << ( tmp_13_fu_450_p3 );

    SC_METHOD(thread_tmp_6_fu_590_p2);
    sensitive << ( tmp_11_cast_fu_582_p1 );
    sensitive << ( tmp_12_cast_fu_586_p1 );

    SC_METHOD(thread_tmp_7_fu_462_p4);
    sensitive << ( tmp_20_i_i_fu_444_p2 );

    SC_METHOD(thread_tmp_cast_fu_292_p1);
    sensitive << ( tmp_fu_284_p3 );

    SC_METHOD(thread_tmp_fu_284_p3);
    sensitive << ( i_reg_156 );

    SC_METHOD(thread_tmp_i_i_11_fu_408_p2);
    sensitive << ( loc_V_fu_364_p4 );

    SC_METHOD(thread_tmp_i_i_cast_fu_414_p1);
    sensitive << ( tmp_i_i_11_fu_408_p2 );

    SC_METHOD(thread_tmp_i_i_fu_386_p1);
    sensitive << ( p_Result_1_fu_378_p3 );

    SC_METHOD(thread_tmp_i_i_i_cast3_fu_390_p1);
    sensitive << ( loc_V_fu_364_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_544_p2 );
    sensitive << ( exitcond5_fu_278_p2 );
    sensitive << ( exitcond2_fu_325_p2 );
    sensitive << ( grp_convolution2D_fu_214_ap_done );
    sensitive << ( exitcond_fu_550_p2 );
    sensitive << ( exitcond3_fu_314_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_reg_grp_convolution2D_fu_214_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
    sc_trace(mVcdFile, output_r_q1, "(port)output_r_q1");
    sc_trace(mVcdFile, golden_address0, "(port)golden_address0");
    sc_trace(mVcdFile, golden_ce0, "(port)golden_ce0");
    sc_trace(mVcdFile, golden_q0, "(port)golden_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, horiz_operator_q0, "horiz_operator_q0");
    sc_trace(mVcdFile, vert_operator_q0, "vert_operator_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, exitcond1_fu_544_p2, "exitcond1_fu_544_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, grp_fu_232_p2, "grp_fu_232_p2");
    sc_trace(mVcdFile, reg_271, "reg_271");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, ap_CS_fsm_state145, "ap_CS_fsm_state145");
    sc_trace(mVcdFile, i_1_fu_308_p2, "i_1_fu_308_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond5_fu_278_p2, "exitcond5_fu_278_p2");
    sc_trace(mVcdFile, j_2_fu_331_p2, "j_2_fu_331_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_325_p2, "exitcond2_fu_325_p2");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_ap_return, "grp_convolution2D_fu_214_ap_return");
    sc_trace(mVcdFile, tmp_2_reg_630, "tmp_2_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_ap_done, "grp_convolution2D_fu_214_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p_fu_347_p2, "p_fu_347_p2");
    sc_trace(mVcdFile, p_reg_642, "p_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_244_p1, "grp_fu_244_p1");
    sc_trace(mVcdFile, tmp_s_reg_647, "tmp_s_reg_647");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_250_p2, "grp_fu_250_p2");
    sc_trace(mVcdFile, x_assign_2_reg_652, "x_assign_2_reg_652");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, p_Result_s_reg_657, "p_Result_s_reg_657");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, p_Val2_4_fu_472_p3, "p_Val2_4_fu_472_p3");
    sc_trace(mVcdFile, p_Val2_4_reg_662, "p_Val2_4_reg_662");
    sc_trace(mVcdFile, i_5_fu_538_p2, "i_5_fu_538_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, exitcond_fu_550_p2, "exitcond_fu_550_p2");
    sc_trace(mVcdFile, j_3_fu_570_p2, "j_3_fu_570_p2");
    sc_trace(mVcdFile, j_3_reg_692, "j_3_reg_692");
    sc_trace(mVcdFile, i_4_fu_576_p2, "i_4_fu_576_p2");
    sc_trace(mVcdFile, tmp_6_fu_590_p2, "tmp_6_fu_590_p2");
    sc_trace(mVcdFile, tmp_6_reg_702, "tmp_6_reg_702");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, grp_fu_247_p1, "grp_fu_247_p1");
    sc_trace(mVcdFile, tmp_8_reg_712, "tmp_8_reg_712");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, grp_fu_228_p2, "grp_fu_228_p2");
    sc_trace(mVcdFile, PSNR_3_reg_718, "PSNR_3_reg_718");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, grp_fu_239_p2, "grp_fu_239_p2");
    sc_trace(mVcdFile, x_assign_reg_723, "x_assign_reg_723");
    sc_trace(mVcdFile, ap_CS_fsm_state108, "ap_CS_fsm_state108");
    sc_trace(mVcdFile, grp_fu_255_p2, "grp_fu_255_p2");
    sc_trace(mVcdFile, tmp_i_i_i1_reg_728, "tmp_i_i_i1_reg_728");
    sc_trace(mVcdFile, ap_CS_fsm_state139, "ap_CS_fsm_state139");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_ap_start, "grp_convolution2D_fu_214_ap_start");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_ap_idle, "grp_convolution2D_fu_214_ap_idle");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_ap_ready, "grp_convolution2D_fu_214_ap_ready");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_input_r_address0, "grp_convolution2D_fu_214_input_r_address0");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_input_r_ce0, "grp_convolution2D_fu_214_input_r_ce0");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_operator_address0, "grp_convolution2D_fu_214_operator_address0");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_operator_ce0, "grp_convolution2D_fu_214_operator_ce0");
    sc_trace(mVcdFile, grp_convolution2D_fu_214_operator_q0, "grp_convolution2D_fu_214_operator_q0");
    sc_trace(mVcdFile, i_reg_156, "i_reg_156");
    sc_trace(mVcdFile, j_reg_167, "j_reg_167");
    sc_trace(mVcdFile, i_2_reg_179, "i_2_reg_179");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_314_p2, "exitcond3_fu_314_p2");
    sc_trace(mVcdFile, i_3_reg_191, "i_3_reg_191");
    sc_trace(mVcdFile, j_1_reg_203, "j_1_reg_203");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, ap_reg_grp_convolution2D_fu_214_ap_start, "ap_reg_grp_convolution2D_fu_214_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_cast_fu_292_p1, "tmp_cast_fu_292_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_303_p1, "tmp_1_cast_fu_303_p1");
    sc_trace(mVcdFile, sum9_cast_fu_520_p1, "sum9_cast_fu_520_p1");
    sc_trace(mVcdFile, icmp_fu_501_p2, "icmp_fu_501_p2");
    sc_trace(mVcdFile, sum7_cast_fu_533_p1, "sum7_cast_fu_533_p1");
    sc_trace(mVcdFile, sum_cast_fu_564_p1, "sum_cast_fu_564_p1");
    sc_trace(mVcdFile, PSNR_fu_90, "PSNR_fu_90");
    sc_trace(mVcdFile, tmp_15_fu_507_p1, "tmp_15_fu_507_p1");
    sc_trace(mVcdFile, grp_fu_232_p0, "grp_fu_232_p0");
    sc_trace(mVcdFile, grp_fu_232_p1, "grp_fu_232_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state140, "ap_CS_fsm_state140");
    sc_trace(mVcdFile, ap_CS_fsm_state146, "ap_CS_fsm_state146");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_247_p0, "grp_fu_247_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state109, "ap_CS_fsm_state109");
    sc_trace(mVcdFile, tmp_fu_284_p3, "tmp_fu_284_p3");
    sc_trace(mVcdFile, tmp_1_fu_297_p2, "tmp_1_fu_297_p2");
    sc_trace(mVcdFile, grp_fu_341_p2, "grp_fu_341_p2");
    sc_trace(mVcdFile, grp_fu_337_p2, "grp_fu_337_p2");
    sc_trace(mVcdFile, p_Val2_1_fu_353_p1, "p_Val2_1_fu_353_p1");
    sc_trace(mVcdFile, loc_V_1_fu_374_p1, "loc_V_1_fu_374_p1");
    sc_trace(mVcdFile, p_Result_1_fu_378_p3, "p_Result_1_fu_378_p3");
    sc_trace(mVcdFile, loc_V_fu_364_p4, "loc_V_fu_364_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast3_fu_390_p1, "tmp_i_i_i_cast3_fu_390_p1");
    sc_trace(mVcdFile, sh_assign_fu_394_p2, "sh_assign_fu_394_p2");
    sc_trace(mVcdFile, tmp_i_i_11_fu_408_p2, "tmp_i_i_11_fu_408_p2");
    sc_trace(mVcdFile, isNeg_fu_400_p3, "isNeg_fu_400_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_414_p1, "tmp_i_i_cast_fu_414_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_418_p3, "sh_assign_1_fu_418_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_426_p1, "sh_assign_1_cast_fu_426_p1");
    sc_trace(mVcdFile, tmp_18_i_i_cast_fu_434_p1, "tmp_18_i_i_cast_fu_434_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_386_p1, "tmp_i_i_fu_386_p1");
    sc_trace(mVcdFile, tmp_18_i_i_fu_430_p1, "tmp_18_i_i_fu_430_p1");
    sc_trace(mVcdFile, tmp_19_i_i_fu_438_p2, "tmp_19_i_i_fu_438_p2");
    sc_trace(mVcdFile, tmp_13_fu_450_p3, "tmp_13_fu_450_p3");
    sc_trace(mVcdFile, tmp_20_i_i_fu_444_p2, "tmp_20_i_i_fu_444_p2");
    sc_trace(mVcdFile, tmp_5_fu_458_p1, "tmp_5_fu_458_p1");
    sc_trace(mVcdFile, tmp_7_fu_462_p4, "tmp_7_fu_462_p4");
    sc_trace(mVcdFile, p_Val2_7_i_i_fu_480_p2, "p_Val2_7_i_i_fu_480_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_485_p3, "p_Val2_s_fu_485_p3");
    sc_trace(mVcdFile, tmp_14_fu_491_p4, "tmp_14_fu_491_p4");
    sc_trace(mVcdFile, sum9_fu_512_p3, "sum9_fu_512_p3");
    sc_trace(mVcdFile, sum7_fu_525_p3, "sum7_fu_525_p3");
    sc_trace(mVcdFile, sum_fu_556_p3, "sum_fu_556_p3");
    sc_trace(mVcdFile, tmp_11_cast_fu_582_p1, "tmp_11_cast_fu_582_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_586_p1, "tmp_12_cast_fu_586_p1");
    sc_trace(mVcdFile, grp_fu_337_ce, "grp_fu_337_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_341_ce, "grp_fu_341_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state151, "ap_CS_fsm_state151");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("sobel.hdltvin.dat");
    mHdltvoutHandle.open("sobel.hdltvout.dat");
}

sobel::~sobel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete horiz_operator_U;
    delete vert_operator_U;
    delete grp_convolution2D_fu_214;
    delete sobel_dadd_64ns_6dEe_U5;
    delete sobel_dmul_64ns_6eOg_U6;
    delete sobel_ddiv_64ns_6fYi_U7;
    delete sobel_uitodp_32nsg8j_U8;
    delete sobel_sitodp_32s_hbi_U9;
    delete sobel_dsqrt_64ns_ibs_U10;
    delete sobel_dlog_64ns_6jbC_U11;
    delete sobel_mul_32s_32skbM_U12;
    delete sobel_mul_32s_32skbM_U13;
}

void sobel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sobel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void sobel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_40F0000000000000;
}

void sobel::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state72.read()))) {
        PSNR_fu_90 = PSNR_3_reg_718.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_314_p2.read()))) {
        PSNR_fu_90 = ap_const_lv64_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_convolution2D_fu_214_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_325_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())))) {
            ap_reg_grp_convolution2D_fu_214_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution2D_fu_214_ap_ready.read())) {
            ap_reg_grp_convolution2D_fu_214_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_314_p2.read()))) {
        i_2_reg_179 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()))) {
        i_2_reg_179 = i_5_fu_538_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_314_p2.read()))) {
        i_3_reg_191 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state53.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_550_p2.read()))) {
        i_3_reg_191 = i_4_fu_576_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_278_p2.read()))) {
        i_reg_156 = i_1_fu_308_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_156 = ap_const_lv10_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state52.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_544_p2.read(), ap_const_lv1_0))) {
        j_1_reg_203 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state72.read()))) {
        j_1_reg_203 = j_3_reg_692.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_278_p2.read()))) {
        j_reg_167 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_325_p2.read()))) {
        j_reg_167 = j_2_fu_331_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state71.read()))) {
        PSNR_3_reg_718 = grp_fu_228_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_550_p2.read()))) {
        j_3_reg_692 = j_3_fu_570_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state50.read()))) {
        p_Result_s_reg_657 = p_Val2_1_fu_353_p1.read().range(63, 63);
        p_Val2_4_reg_662 = p_Val2_4_fu_472_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        p_reg_642 = p_fu_347_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state66.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state77.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state145.read())))) {
        reg_271 = grp_fu_232_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution2D_fu_214_ap_done.read()))) {
        tmp_2_reg_630 = grp_convolution2D_fu_214_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state54.read()))) {
        tmp_6_reg_702 = tmp_6_fu_590_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state60.read()))) {
        tmp_8_reg_712 = grp_fu_247_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state139.read()))) {
        tmp_i_i_i1_reg_728 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        tmp_s_reg_647 = grp_fu_244_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state49.read()))) {
        x_assign_2_reg_652 = grp_fu_250_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state108.read()))) {
        x_assign_reg_723 = grp_fu_239_p2.read();
    }
}

void sobel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void sobel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void sobel::thread_ap_CS_fsm_state108() {
    ap_CS_fsm_state108 = ap_CS_fsm.read().range(107, 107);
}

void sobel::thread_ap_CS_fsm_state109() {
    ap_CS_fsm_state109 = ap_CS_fsm.read().range(108, 108);
}

void sobel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void sobel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void sobel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void sobel::thread_ap_CS_fsm_state139() {
    ap_CS_fsm_state139 = ap_CS_fsm.read().range(138, 138);
}

void sobel::thread_ap_CS_fsm_state140() {
    ap_CS_fsm_state140 = ap_CS_fsm.read().range(139, 139);
}

void sobel::thread_ap_CS_fsm_state145() {
    ap_CS_fsm_state145 = ap_CS_fsm.read().range(144, 144);
}

void sobel::thread_ap_CS_fsm_state146() {
    ap_CS_fsm_state146 = ap_CS_fsm.read().range(145, 145);
}

void sobel::thread_ap_CS_fsm_state151() {
    ap_CS_fsm_state151 = ap_CS_fsm.read().range(150, 150);
}

void sobel::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void sobel::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void sobel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void sobel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void sobel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void sobel::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read().range(48, 48);
}

void sobel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void sobel::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read().range(49, 49);
}

void sobel::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read().range(50, 50);
}

void sobel::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read().range(51, 51);
}

void sobel::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read().range(52, 52);
}

void sobel::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read().range(53, 53);
}

void sobel::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read().range(54, 54);
}

void sobel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void sobel::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read().range(59, 59);
}

void sobel::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read().range(60, 60);
}

void sobel::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read().range(65, 65);
}

void sobel::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read().range(66, 66);
}

void sobel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void sobel::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read().range(70, 70);
}

void sobel::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read().range(71, 71);
}

void sobel::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read().range(76, 76);
}

void sobel::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read().range(77, 77);
}

void sobel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void sobel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void sobel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state151.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state151.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel::thread_ap_return() {
    ap_return = grp_fu_232_p2.read();
}

void sobel::thread_exitcond1_fu_544_p2() {
    exitcond1_fu_544_p2 = (!i_3_reg_191.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_191.read() == ap_const_lv10_3FF);
}

void sobel::thread_exitcond2_fu_325_p2() {
    exitcond2_fu_325_p2 = (!i_2_reg_179.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_179.read() == ap_const_lv10_3FF);
}

void sobel::thread_exitcond3_fu_314_p2() {
    exitcond3_fu_314_p2 = (!j_reg_167.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_167.read() == ap_const_lv10_3FF);
}

void sobel::thread_exitcond5_fu_278_p2() {
    exitcond5_fu_278_p2 = (!i_reg_156.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_156.read() == ap_const_lv10_3FF);
}

void sobel::thread_exitcond_fu_550_p2() {
    exitcond_fu_550_p2 = (!j_1_reg_203.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_203.read() == ap_const_lv10_3FF);
}

void sobel::thread_golden_address0() {
    golden_address0 =  (sc_lv<20>) (sum_cast_fu_564_p1.read());
}

void sobel::thread_golden_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state53.read()))) {
        golden_ce0 = ap_const_logic_1;
    } else {
        golden_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_grp_convolution2D_fu_214_ap_start() {
    grp_convolution2D_fu_214_ap_start = ap_reg_grp_convolution2D_fu_214_ap_start.read();
}

void sobel::thread_grp_convolution2D_fu_214_operator_q0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        grp_convolution2D_fu_214_operator_q0 = vert_operator_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        grp_convolution2D_fu_214_operator_q0 = horiz_operator_q0.read();
    } else {
        grp_convolution2D_fu_214_operator_q0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel::thread_grp_fu_232_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state146.read()))) {
        grp_fu_232_p0 = reg_271.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state140.read()))) {
        grp_fu_232_p0 = tmp_i_i_i1_reg_728.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state61.read()))) {
        grp_fu_232_p0 = tmp_8_reg_712.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state52.read()))) {
        grp_fu_232_p0 = PSNR_fu_90.read();
    } else {
        grp_fu_232_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sobel::thread_grp_fu_232_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state146.read()))) {
        grp_fu_232_p1 = ap_const_lv64_4024000000000000;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state140.read()))) {
        grp_fu_232_p1 = ap_const_lv64_3FDBCB7B1526E50E;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state61.read()))) {
        grp_fu_232_p1 = tmp_8_reg_712.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state52.read()))) {
        grp_fu_232_p1 = ap_const_lv64_3EB0000000000000;
    } else {
        grp_fu_232_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sobel::thread_grp_fu_247_p0() {
    grp_fu_247_p0 = esl_sext<32,9>(tmp_6_reg_702.read());
}

void sobel::thread_grp_fu_337_ce() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution2D_fu_214_ap_done.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        grp_fu_337_ce = ap_const_logic_1;
    } else {
        grp_fu_337_ce = ap_const_logic_0;
    }
}

void sobel::thread_grp_fu_341_ce() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution2D_fu_214_ap_done.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        grp_fu_341_ce = ap_const_logic_1;
    } else {
        grp_fu_341_ce = ap_const_logic_0;
    }
}

void sobel::thread_i_1_fu_308_p2() {
    i_1_fu_308_p2 = (!i_reg_156.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_156.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_i_4_fu_576_p2() {
    i_4_fu_576_p2 = (!i_3_reg_191.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_3_reg_191.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_i_5_fu_538_p2() {
    i_5_fu_538_p2 = (!i_2_reg_179.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_2_reg_179.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_icmp_fu_501_p2() {
    icmp_fu_501_p2 = (!tmp_14_fu_491_p4.read().is_01() || !ap_const_lv24_0.is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_14_fu_491_p4.read()) > sc_bigint<24>(ap_const_lv24_0));
}

void sobel::thread_input_r_address0() {
    input_r_address0 = grp_convolution2D_fu_214_input_r_address0.read();
}

void sobel::thread_input_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        input_r_ce0 = grp_convolution2D_fu_214_input_r_ce0.read();
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_isNeg_fu_400_p3() {
    isNeg_fu_400_p3 = sh_assign_fu_394_p2.read().range(11, 11);
}

void sobel::thread_j_2_fu_331_p2() {
    j_2_fu_331_p2 = (!j_reg_167.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_167.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_j_3_fu_570_p2() {
    j_3_fu_570_p2 = (!j_1_reg_203.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_1_reg_203.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel::thread_loc_V_1_fu_374_p1() {
    loc_V_1_fu_374_p1 = p_Val2_1_fu_353_p1.read().range(52-1, 0);
}

void sobel::thread_loc_V_fu_364_p4() {
    loc_V_fu_364_p4 = p_Val2_1_fu_353_p1.read().range(62, 52);
}

void sobel::thread_output_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read()))) {
        output_r_address0 =  (sc_lv<20>) (sum7_cast_fu_533_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read()))) {
        output_r_address0 =  (sc_lv<20>) (sum9_cast_fu_520_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        output_r_address0 =  (sc_lv<20>) (tmp_cast_fu_292_p1.read());
    } else {
        output_r_address0 =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
    }
}

void sobel::thread_output_r_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state53.read()))) {
        output_r_address1 =  (sc_lv<20>) (sum_cast_fu_564_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        output_r_address1 =  (sc_lv<20>) (tmp_1_cast_fu_303_p1.read());
    } else {
        output_r_address1 =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
    }
}

void sobel::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read())))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void sobel::thread_output_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state53.read())))) {
        output_r_ce1 = ap_const_logic_1;
    } else {
        output_r_ce1 = ap_const_logic_0;
    }
}

void sobel::thread_output_r_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read()))) {
        output_r_d0 = ap_const_lv8_FF;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read()))) {
        output_r_d0 = tmp_15_fu_507_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        output_r_d0 = ap_const_lv8_0;
    } else {
        output_r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sobel::thread_output_r_d1() {
    output_r_d1 = ap_const_lv8_0;
}

void sobel::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_278_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state51.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_501_p2.read())))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void sobel::thread_output_r_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_278_p2.read())))) {
        output_r_we1 = ap_const_logic_1;
    } else {
        output_r_we1 = ap_const_logic_0;
    }
}

void sobel::thread_p_Result_1_fu_378_p3() {
    p_Result_1_fu_378_p3 = esl_concat<1,52>(ap_const_lv1_1, loc_V_1_fu_374_p1.read());
}

void sobel::thread_p_Val2_1_fu_353_p1() {
    p_Val2_1_fu_353_p1 = x_assign_2_reg_652.read();
}

void sobel::thread_p_Val2_4_fu_472_p3() {
    p_Val2_4_fu_472_p3 = (!isNeg_fu_400_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_400_p3.read()[0].to_bool())? tmp_5_fu_458_p1.read(): tmp_7_fu_462_p4.read());
}

void sobel::thread_p_Val2_7_i_i_fu_480_p2() {
    p_Val2_7_i_i_fu_480_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_4_reg_662.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_4_reg_662.read()));
}

void sobel::thread_p_Val2_s_fu_485_p3() {
    p_Val2_s_fu_485_p3 = (!p_Result_s_reg_657.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_657.read()[0].to_bool())? p_Val2_7_i_i_fu_480_p2.read(): p_Val2_4_reg_662.read());
}

void sobel::thread_p_fu_347_p2() {
    p_fu_347_p2 = (!grp_fu_341_p2.read().is_01() || !grp_fu_337_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_341_p2.read()) + sc_biguint<32>(grp_fu_337_p2.read()));
}

void sobel::thread_sh_assign_1_cast_fu_426_p1() {
    sh_assign_1_cast_fu_426_p1 = esl_sext<32,12>(sh_assign_1_fu_418_p3.read());
}

void sobel::thread_sh_assign_1_fu_418_p3() {
    sh_assign_1_fu_418_p3 = (!isNeg_fu_400_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_400_p3.read()[0].to_bool())? tmp_i_i_cast_fu_414_p1.read(): sh_assign_fu_394_p2.read());
}

void sobel::thread_sh_assign_fu_394_p2() {
    sh_assign_fu_394_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast3_fu_390_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast3_fu_390_p1.read()));
}

void sobel::thread_sum7_cast_fu_533_p1() {
    sum7_cast_fu_533_p1 = esl_zext<32,20>(sum7_fu_525_p3.read());
}

void sobel::thread_sum7_fu_525_p3() {
    sum7_fu_525_p3 = esl_concat<10,10>(i_2_reg_179.read(), j_reg_167.read());
}

void sobel::thread_sum9_cast_fu_520_p1() {
    sum9_cast_fu_520_p1 = esl_zext<32,20>(sum9_fu_512_p3.read());
}

void sobel::thread_sum9_fu_512_p3() {
    sum9_fu_512_p3 = esl_concat<10,10>(i_2_reg_179.read(), j_reg_167.read());
}

void sobel::thread_sum_cast_fu_564_p1() {
    sum_cast_fu_564_p1 = esl_zext<32,20>(sum_fu_556_p3.read());
}

void sobel::thread_sum_fu_556_p3() {
    sum_fu_556_p3 = esl_concat<10,10>(i_3_reg_191.read(), j_1_reg_203.read());
}

void sobel::thread_tmp_11_cast_fu_582_p1() {
    tmp_11_cast_fu_582_p1 = esl_zext<9,8>(output_r_q1.read());
}

void sobel::thread_tmp_12_cast_fu_586_p1() {
    tmp_12_cast_fu_586_p1 = esl_zext<9,8>(golden_q0.read());
}

void sobel::thread_tmp_13_fu_450_p3() {
    tmp_13_fu_450_p3 = tmp_19_i_i_fu_438_p2.read().range(52, 52);
}

void sobel::thread_tmp_14_fu_491_p4() {
    tmp_14_fu_491_p4 = p_Val2_s_fu_485_p3.read().range(31, 8);
}

void sobel::thread_tmp_15_fu_507_p1() {
    tmp_15_fu_507_p1 = p_Val2_s_fu_485_p3.read().range(8-1, 0);
}

void sobel::thread_tmp_18_i_i_cast_fu_434_p1() {
    tmp_18_i_i_cast_fu_434_p1 = esl_zext<53,32>(sh_assign_1_cast_fu_426_p1.read());
}

void sobel::thread_tmp_18_i_i_fu_430_p1() {
    tmp_18_i_i_fu_430_p1 = esl_zext<136,32>(sh_assign_1_cast_fu_426_p1.read());
}

void sobel::thread_tmp_19_i_i_fu_438_p2() {
    tmp_19_i_i_fu_438_p2 = (!tmp_18_i_i_cast_fu_434_p1.read().is_01())? sc_lv<53>(): p_Result_1_fu_378_p3.read() >> (unsigned short)tmp_18_i_i_cast_fu_434_p1.read().to_uint();
}

void sobel::thread_tmp_1_cast_fu_303_p1() {
    tmp_1_cast_fu_303_p1 = esl_zext<32,20>(tmp_1_fu_297_p2.read());
}

void sobel::thread_tmp_1_fu_297_p2() {
    tmp_1_fu_297_p2 = (tmp_fu_284_p3.read() | ap_const_lv20_3FF);
}

void sobel::thread_tmp_20_i_i_fu_444_p2() {
    tmp_20_i_i_fu_444_p2 = (!tmp_18_i_i_fu_430_p1.read().is_01())? sc_lv<136>(): tmp_i_i_fu_386_p1.read() << (unsigned short)tmp_18_i_i_fu_430_p1.read().to_uint();
}

void sobel::thread_tmp_5_fu_458_p1() {
    tmp_5_fu_458_p1 = esl_zext<32,1>(tmp_13_fu_450_p3.read());
}

void sobel::thread_tmp_6_fu_590_p2() {
    tmp_6_fu_590_p2 = (!tmp_11_cast_fu_582_p1.read().is_01() || !tmp_12_cast_fu_586_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_11_cast_fu_582_p1.read()) - sc_biguint<9>(tmp_12_cast_fu_586_p1.read()));
}

void sobel::thread_tmp_7_fu_462_p4() {
    tmp_7_fu_462_p4 = tmp_20_i_i_fu_444_p2.read().range(83, 52);
}

void sobel::thread_tmp_cast_fu_292_p1() {
    tmp_cast_fu_292_p1 = esl_zext<32,20>(tmp_fu_284_p3.read());
}

void sobel::thread_tmp_fu_284_p3() {
    tmp_fu_284_p3 = esl_concat<10,10>(i_reg_156.read(), ap_const_lv10_0);
}

void sobel::thread_tmp_i_i_11_fu_408_p2() {
    tmp_i_i_11_fu_408_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_fu_364_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_fu_364_p4.read()));
}

void sobel::thread_tmp_i_i_cast_fu_414_p1() {
    tmp_i_i_cast_fu_414_p1 = esl_sext<12,11>(tmp_i_i_11_fu_408_p2.read());
}

void sobel::thread_tmp_i_i_fu_386_p1() {
    tmp_i_i_fu_386_p1 = esl_zext<136,53>(p_Result_1_fu_378_p3.read());
}

void sobel::thread_tmp_i_i_i_cast3_fu_390_p1() {
    tmp_i_i_i_cast3_fu_390_p1 = esl_zext<12,11>(loc_V_fu_364_p4.read());
}

void sobel::thread_ap_NS_fsm() {
    if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_278_p2.read())) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_314_p2.read())) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_325_p2.read())) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution2D_fu_214_ap_done.read())) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution2D_fu_214_ap_done.read())) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        if (esl_seteq<1,1,1>(exitcond1_fu_544_p2.read(), ap_const_lv1_0)) {
            ap_NS_fsm = ap_ST_fsm_state53;
        } else {
            ap_NS_fsm = ap_ST_fsm_state73;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_550_p2.read())) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_state54;
        }
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        ap_NS_fsm = ap_ST_fsm_state114;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        ap_NS_fsm = ap_ST_fsm_state116;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        ap_NS_fsm = ap_ST_fsm_state118;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        ap_NS_fsm = ap_ST_fsm_state121;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        ap_NS_fsm = ap_ST_fsm_state122;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        ap_NS_fsm = ap_ST_fsm_state125;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        ap_NS_fsm = ap_ST_fsm_state126;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        ap_NS_fsm = ap_ST_fsm_state128;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        ap_NS_fsm = ap_ST_fsm_state129;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        ap_NS_fsm = ap_ST_fsm_state130;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        ap_NS_fsm = ap_ST_fsm_state131;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state131))
    {
        ap_NS_fsm = ap_ST_fsm_state132;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state132))
    {
        ap_NS_fsm = ap_ST_fsm_state133;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state133))
    {
        ap_NS_fsm = ap_ST_fsm_state134;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state134))
    {
        ap_NS_fsm = ap_ST_fsm_state135;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state135))
    {
        ap_NS_fsm = ap_ST_fsm_state136;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state136))
    {
        ap_NS_fsm = ap_ST_fsm_state137;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state137))
    {
        ap_NS_fsm = ap_ST_fsm_state138;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state138))
    {
        ap_NS_fsm = ap_ST_fsm_state139;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state139))
    {
        ap_NS_fsm = ap_ST_fsm_state140;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state140))
    {
        ap_NS_fsm = ap_ST_fsm_state141;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state141))
    {
        ap_NS_fsm = ap_ST_fsm_state142;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state142))
    {
        ap_NS_fsm = ap_ST_fsm_state143;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state143))
    {
        ap_NS_fsm = ap_ST_fsm_state144;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state144))
    {
        ap_NS_fsm = ap_ST_fsm_state145;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state145))
    {
        ap_NS_fsm = ap_ST_fsm_state146;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state146))
    {
        ap_NS_fsm = ap_ST_fsm_state147;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state147))
    {
        ap_NS_fsm = ap_ST_fsm_state148;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state148))
    {
        ap_NS_fsm = ap_ST_fsm_state149;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state149))
    {
        ap_NS_fsm = ap_ST_fsm_state150;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state150))
    {
        ap_NS_fsm = ap_ST_fsm_state151;
    }
    else if (esl_seteq<1,151,151>(ap_CS_fsm.read(), ap_ST_fsm_state151))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<151>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void sobel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address1\" :  \"" << output_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce1\" :  \"" << output_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we1\" :  \"" << output_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d1\" :  \"" << output_r_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_q1\" :  \"" << output_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"golden_address0\" :  \"" << golden_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"golden_ce0\" :  \"" << golden_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"golden_q0\" :  \"" << golden_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

