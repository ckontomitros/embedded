// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution2D_HH_
#define _convolution2D_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_mul_8ns_32sbkb.h"

namespace ap_rtl {

struct convolution2D : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<10> > posy;
    sc_in< sc_lv<10> > posx;
    sc_out< sc_lv<20> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<8> > input_r_q0;
    sc_out< sc_lv<4> > operator_address0;
    sc_out< sc_logic > operator_ce0;
    sc_in< sc_lv<32> > operator_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution2D(sc_module_name name);
    SC_HAS_PROCESS(convolution2D);

    ~convolution2D();

    sc_trace_file* mVcdFile;

    sobel_mul_8ns_32sbkb<1,3,8,32,32>* sobel_mul_8ns_32sbkb_U0;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > j_4_fu_107_p2;
    sc_signal< sc_lv<3> > j_4_reg_230;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_101_p2;
    sc_signal< sc_lv<5> > j_4_cast_fu_113_p1;
    sc_signal< sc_lv<5> > j_4_cast_reg_235;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_117_p2;
    sc_signal< sc_lv<3> > i_6_fu_158_p2;
    sc_signal< sc_lv<3> > i_6_reg_248;
    sc_signal< sc_lv<5> > tmp_12_fu_182_p2;
    sc_signal< sc_lv<5> > tmp_12_reg_253;
    sc_signal< sc_lv<8> > input_load_reg_258;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_194_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_278;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > j_reg_70;
    sc_signal< sc_lv<3> > i_reg_82;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > sum_cast_fu_153_p1;
    sc_signal< sc_lv<32> > tmp_15_cast_fu_187_p1;
    sc_signal< sc_lv<32> > res_fu_30;
    sc_signal< sc_lv<32> > res_1_fu_200_p2;
    sc_signal< sc_lv<10> > tmp_5_cast_fu_123_p1;
    sc_signal< sc_lv<10> > tmp5_fu_127_p2;
    sc_signal< sc_lv<20> > tmp1_fu_132_p3;
    sc_signal< sc_lv<22> > j_cast1_fu_143_p1;
    sc_signal< sc_lv<22> > tmp1_cast_fu_139_p1;
    sc_signal< sc_lv<22> > sum_fu_147_p2;
    sc_signal< sc_lv<5> > tmp_fu_168_p3;
    sc_signal< sc_lv<5> > i_6_cast_cast_fu_164_p1;
    sc_signal< sc_lv<5> > tmp_11_fu_176_p2;
    sc_signal< sc_lv<8> > grp_fu_194_p0;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<32> > grp_fu_194_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond1_fu_101_p2();
    void thread_exitcond_fu_117_p2();
    void thread_grp_fu_194_p0();
    void thread_grp_fu_194_p00();
    void thread_i_6_cast_cast_fu_164_p1();
    void thread_i_6_fu_158_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_4_cast_fu_113_p1();
    void thread_j_4_fu_107_p2();
    void thread_j_cast1_fu_143_p1();
    void thread_operator_address0();
    void thread_operator_ce0();
    void thread_res_1_fu_200_p2();
    void thread_sum_cast_fu_153_p1();
    void thread_sum_fu_147_p2();
    void thread_tmp1_cast_fu_139_p1();
    void thread_tmp1_fu_132_p3();
    void thread_tmp5_fu_127_p2();
    void thread_tmp_11_fu_176_p2();
    void thread_tmp_12_fu_182_p2();
    void thread_tmp_15_cast_fu_187_p1();
    void thread_tmp_5_cast_fu_123_p1();
    void thread_tmp_fu_168_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
