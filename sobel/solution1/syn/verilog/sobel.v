// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.623000,HLS_SYN_LAT=198457152,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=85,HLS_SYN_FF=9596,HLS_SYN_LUT=12074}" *)

module sobel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_we1,
        output_r_d1,
        output_r_q1,
        golden_address0,
        golden_ce0,
        golden_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 151'b1;
parameter    ap_ST_fsm_state2 = 151'b10;
parameter    ap_ST_fsm_state3 = 151'b100;
parameter    ap_ST_fsm_state4 = 151'b1000;
parameter    ap_ST_fsm_state5 = 151'b10000;
parameter    ap_ST_fsm_state6 = 151'b100000;
parameter    ap_ST_fsm_state7 = 151'b1000000;
parameter    ap_ST_fsm_state8 = 151'b10000000;
parameter    ap_ST_fsm_state9 = 151'b100000000;
parameter    ap_ST_fsm_state10 = 151'b1000000000;
parameter    ap_ST_fsm_state11 = 151'b10000000000;
parameter    ap_ST_fsm_state12 = 151'b100000000000;
parameter    ap_ST_fsm_state13 = 151'b1000000000000;
parameter    ap_ST_fsm_state14 = 151'b10000000000000;
parameter    ap_ST_fsm_state15 = 151'b100000000000000;
parameter    ap_ST_fsm_state16 = 151'b1000000000000000;
parameter    ap_ST_fsm_state17 = 151'b10000000000000000;
parameter    ap_ST_fsm_state18 = 151'b100000000000000000;
parameter    ap_ST_fsm_state19 = 151'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 151'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 151'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 151'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 151'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 151'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 151'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 151'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 151'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 151'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 151'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 151'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 151'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 151'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 151'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 151'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 151'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 151'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 151'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 151'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 151'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 151'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 151'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 151'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 151'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 151'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state45 = 151'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 151'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 151'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state48 = 151'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state49 = 151'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 151'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 151'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 151'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 151'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 151'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 151'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 151'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 151'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 151'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 151'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 151'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 151'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 151'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 151'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 151'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 151'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 151'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 151'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 151'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 151'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state92 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state93 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state94 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state95 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state96 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state97 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state98 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state99 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state100 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state101 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state102 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state103 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state104 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state105 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state106 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state107 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state108 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state109 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state110 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state111 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state112 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state113 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state114 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state115 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state116 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state117 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state118 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state119 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state120 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state121 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state122 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state123 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state124 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state125 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state126 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state127 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state128 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state129 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state130 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state131 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state132 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state133 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state134 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state135 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state136 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state137 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state138 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state139 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state140 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state141 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state142 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state143 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state144 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state145 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state146 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state147 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state148 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state149 = 151'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state150 = 151'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state151 = 151'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv64_3EB0000000000000 = 64'b11111010110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FDBCB7B1526E50E = 64'b11111111011011110010110111101100010101001001101110010100001110;
parameter    ap_const_lv64_4024000000000000 = 64'b100000000100100000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv64_40F0000000000000 = 64'b100000011110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_6C = 32'b1101100;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv20_3FF = 20'b1111111111;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_96 = 32'b10010110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [19:0] input_r_address0;
output   input_r_ce0;
input  [7:0] input_r_q0;
output  [19:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [7:0] output_r_d0;
output  [19:0] output_r_address1;
output   output_r_ce1;
output   output_r_we1;
output  [7:0] output_r_d1;
input  [7:0] output_r_q1;
output  [19:0] golden_address0;
output   golden_ce0;
input  [7:0] golden_q0;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[19:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[7:0] output_r_d0;
reg[19:0] output_r_address1;
reg output_r_ce1;
reg output_r_we1;
reg golden_ce0;

(* fsm_encoding = "none" *) reg   [150:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [31:0] horiz_operator_q0;
wire   [31:0] vert_operator_q0;
wire   [0:0] ap_CS_fsm_state52;
wire   [0:0] exitcond1_fu_544_p2;
wire   [0:0] ap_CS_fsm_state67;
wire   [63:0] grp_fu_232_p2;
reg   [63:0] reg_271;
wire   [0:0] ap_CS_fsm_state66;
wire   [0:0] ap_CS_fsm_state77;
wire   [0:0] ap_CS_fsm_state145;
wire   [9:0] i_1_fu_308_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] exitcond5_fu_278_p2;
wire   [9:0] j_2_fu_331_p2;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] exitcond2_fu_325_p2;
wire  signed [31:0] grp_convolution2D_fu_214_ap_return;
reg  signed [31:0] tmp_2_reg_630;
wire   [0:0] ap_CS_fsm_state5;
wire    grp_convolution2D_fu_214_ap_done;
wire   [0:0] ap_CS_fsm_state7;
wire   [31:0] p_fu_347_p2;
reg   [31:0] p_reg_642;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] grp_fu_244_p1;
reg   [63:0] tmp_s_reg_647;
wire   [0:0] ap_CS_fsm_state18;
wire   [63:0] grp_fu_250_p2;
reg   [63:0] x_assign_2_reg_652;
wire   [0:0] ap_CS_fsm_state49;
reg   [0:0] p_Result_s_reg_657;
wire   [0:0] ap_CS_fsm_state50;
wire   [31:0] p_Val2_4_fu_472_p3;
reg   [31:0] p_Val2_4_reg_662;
wire   [9:0] i_5_fu_538_p2;
wire   [0:0] ap_CS_fsm_state51;
wire   [0:0] ap_CS_fsm_state53;
wire   [0:0] exitcond_fu_550_p2;
wire   [9:0] j_3_fu_570_p2;
reg   [9:0] j_3_reg_692;
wire   [9:0] i_4_fu_576_p2;
wire   [8:0] tmp_6_fu_590_p2;
reg   [8:0] tmp_6_reg_702;
wire   [0:0] ap_CS_fsm_state54;
wire   [0:0] ap_CS_fsm_state55;
wire   [63:0] grp_fu_247_p1;
reg   [63:0] tmp_8_reg_712;
wire   [0:0] ap_CS_fsm_state60;
wire   [63:0] grp_fu_228_p2;
reg   [63:0] PSNR_3_reg_718;
wire   [0:0] ap_CS_fsm_state71;
wire   [63:0] grp_fu_239_p2;
reg   [63:0] x_assign_reg_723;
wire   [0:0] ap_CS_fsm_state108;
wire   [63:0] grp_fu_255_p2;
reg   [63:0] tmp_i_i_i1_reg_728;
wire   [0:0] ap_CS_fsm_state139;
wire    grp_convolution2D_fu_214_ap_start;
wire    grp_convolution2D_fu_214_ap_idle;
wire    grp_convolution2D_fu_214_ap_ready;
wire   [19:0] grp_convolution2D_fu_214_input_r_address0;
wire    grp_convolution2D_fu_214_input_r_ce0;
wire   [3:0] grp_convolution2D_fu_214_operator_address0;
wire    grp_convolution2D_fu_214_operator_ce0;
reg   [31:0] grp_convolution2D_fu_214_operator_q0;
reg   [9:0] i_reg_156;
reg   [9:0] j_reg_167;
reg   [9:0] i_2_reg_179;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] exitcond3_fu_314_p2;
reg   [9:0] i_3_reg_191;
reg   [9:0] j_1_reg_203;
wire   [0:0] ap_CS_fsm_state72;
reg    ap_reg_grp_convolution2D_fu_214_ap_start;
wire   [0:0] ap_CS_fsm_state6;
wire   [31:0] tmp_cast_fu_292_p1;
wire   [31:0] tmp_1_cast_fu_303_p1;
wire   [31:0] sum9_cast_fu_520_p1;
wire   [0:0] icmp_fu_501_p2;
wire   [31:0] sum7_cast_fu_533_p1;
wire   [31:0] sum_cast_fu_564_p1;
reg   [63:0] PSNR_fu_90;
wire   [7:0] tmp_15_fu_507_p1;
reg   [63:0] grp_fu_232_p0;
reg   [63:0] grp_fu_232_p1;
wire   [0:0] ap_CS_fsm_state61;
wire   [0:0] ap_CS_fsm_state140;
wire   [0:0] ap_CS_fsm_state146;
wire   [0:0] ap_CS_fsm_state78;
wire   [0:0] ap_CS_fsm_state13;
wire  signed [31:0] grp_fu_247_p0;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] ap_CS_fsm_state109;
wire   [19:0] tmp_fu_284_p3;
wire   [19:0] tmp_1_fu_297_p2;
wire   [31:0] grp_fu_341_p2;
wire   [31:0] grp_fu_337_p2;
wire   [63:0] p_Val2_1_fu_353_p1;
wire   [51:0] loc_V_1_fu_374_p1;
wire   [52:0] p_Result_1_fu_378_p3;
wire   [10:0] loc_V_fu_364_p4;
wire   [11:0] tmp_i_i_i_cast3_fu_390_p1;
wire   [11:0] sh_assign_fu_394_p2;
wire   [10:0] tmp_i_i_11_fu_408_p2;
wire   [0:0] isNeg_fu_400_p3;
wire  signed [11:0] tmp_i_i_cast_fu_414_p1;
wire   [11:0] sh_assign_1_fu_418_p3;
wire  signed [31:0] sh_assign_1_cast_fu_426_p1;
wire   [52:0] tmp_18_i_i_cast_fu_434_p1;
wire   [135:0] tmp_i_i_fu_386_p1;
wire   [135:0] tmp_18_i_i_fu_430_p1;
wire   [52:0] tmp_19_i_i_fu_438_p2;
wire   [0:0] tmp_13_fu_450_p3;
wire   [135:0] tmp_20_i_i_fu_444_p2;
wire   [31:0] tmp_5_fu_458_p1;
wire   [31:0] tmp_7_fu_462_p4;
wire   [31:0] p_Val2_7_i_i_fu_480_p2;
wire   [31:0] p_Val2_s_fu_485_p3;
wire   [23:0] tmp_14_fu_491_p4;
wire   [19:0] sum9_fu_512_p3;
wire   [19:0] sum7_fu_525_p3;
wire   [19:0] sum_fu_556_p3;
wire   [8:0] tmp_11_cast_fu_582_p1;
wire   [8:0] tmp_12_cast_fu_586_p1;
reg    grp_fu_337_ce;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] ap_CS_fsm_state11;
reg    grp_fu_341_ce;
wire   [0:0] ap_CS_fsm_state151;
reg   [150:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 151'b1;
#0 ap_reg_grp_convolution2D_fu_214_ap_start = 1'b0;
end

sobel_horiz_operacud #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
horiz_operator_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_convolution2D_fu_214_operator_address0),
    .ce0(grp_convolution2D_fu_214_operator_ce0),
    .q0(horiz_operator_q0)
);

sobel_vert_operator #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
vert_operator_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_convolution2D_fu_214_operator_address0),
    .ce0(grp_convolution2D_fu_214_operator_ce0),
    .q0(vert_operator_q0)
);

convolution2D grp_convolution2D_fu_214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution2D_fu_214_ap_start),
    .ap_done(grp_convolution2D_fu_214_ap_done),
    .ap_idle(grp_convolution2D_fu_214_ap_idle),
    .ap_ready(grp_convolution2D_fu_214_ap_ready),
    .posy(i_2_reg_179),
    .posx(j_reg_167),
    .input_r_address0(grp_convolution2D_fu_214_input_r_address0),
    .input_r_ce0(grp_convolution2D_fu_214_input_r_ce0),
    .input_r_q0(input_r_q0),
    .operator_address0(grp_convolution2D_fu_214_operator_address0),
    .operator_ce0(grp_convolution2D_fu_214_operator_ce0),
    .operator_q0(grp_convolution2D_fu_214_operator_q0),
    .ap_return(grp_convolution2D_fu_214_ap_return)
);

sobel_dadd_64ns_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(PSNR_fu_90),
    .din1(reg_271),
    .ce(1'b1),
    .dout(grp_fu_228_p2)
);

sobel_dmul_64ns_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6eOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_232_p0),
    .din1(grp_fu_232_p1),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

sobel_ddiv_64ns_6fYi #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_ddiv_64ns_6fYi_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv64_40F0000000000000),
    .din1(reg_271),
    .ce(1'b1),
    .dout(grp_fu_239_p2)
);

sobel_uitodp_32nsg8j #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_uitodp_32nsg8j_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_reg_642),
    .ce(1'b1),
    .dout(grp_fu_244_p1)
);

sobel_sitodp_32s_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32s_hbi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_247_p0),
    .ce(1'b1),
    .dout(grp_fu_247_p1)
);

sobel_dsqrt_64ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dsqrt_64ns_ibs_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv64_0),
    .din1(tmp_s_reg_647),
    .ce(1'b1),
    .dout(grp_fu_250_p2)
);

sobel_dlog_64ns_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dlog_64ns_6jbC_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv64_0),
    .din1(x_assign_reg_723),
    .ce(1'b1),
    .dout(grp_fu_255_p2)
);

sobel_mul_32s_32skbM #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sobel_mul_32s_32skbM_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_630),
    .din1(tmp_2_reg_630),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

sobel_mul_32s_32skbM #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sobel_mul_32s_32skbM_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_convolution2D_fu_214_ap_return),
    .din1(grp_convolution2D_fu_214_ap_return),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_convolution2D_fu_214_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == exitcond2_fu_325_p2)) | (1'b1 == ap_CS_fsm_state6))) begin
            ap_reg_grp_convolution2D_fu_214_ap_start <= 1'b1;
        end else if ((1'b1 == grp_convolution2D_fu_214_ap_ready)) begin
            ap_reg_grp_convolution2D_fu_214_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        PSNR_fu_90 <= PSNR_3_reg_718;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == exitcond3_fu_314_p2))) begin
        PSNR_fu_90 <= ap_const_lv64_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == exitcond3_fu_314_p2))) begin
        i_2_reg_179 <= ap_const_lv10_1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        i_2_reg_179 <= i_5_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == exitcond3_fu_314_p2))) begin
        i_3_reg_191 <= ap_const_lv10_1;
    end else if (((1'b1 == ap_CS_fsm_state53) & ~(1'b0 == exitcond_fu_550_p2))) begin
        i_3_reg_191 <= i_4_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond5_fu_278_p2))) begin
        i_reg_156 <= i_1_fu_308_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_156 <= ap_const_lv10_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (exitcond1_fu_544_p2 == 1'b0))) begin
        j_1_reg_203 <= ap_const_lv10_1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        j_1_reg_203 <= j_3_reg_692;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond5_fu_278_p2))) begin
        j_reg_167 <= ap_const_lv10_1;
    end else if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == exitcond2_fu_325_p2))) begin
        j_reg_167 <= j_2_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        PSNR_3_reg_718 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'b0 == exitcond_fu_550_p2))) begin
        j_3_reg_692 <= j_3_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        p_Result_s_reg_657 <= p_Val2_1_fu_353_p1[ap_const_lv32_3F];
        p_Val2_4_reg_662 <= p_Val2_4_fu_472_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_reg_642 <= p_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state145))) begin
        reg_271 <= grp_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == grp_convolution2D_fu_214_ap_done))) begin
        tmp_2_reg_630 <= grp_convolution2D_fu_214_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        tmp_6_reg_702 <= tmp_6_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        tmp_8_reg_712 <= grp_fu_247_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        tmp_i_i_i1_reg_728 <= grp_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_s_reg_647 <= grp_fu_244_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        x_assign_2_reg_652 <= grp_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        x_assign_reg_723 <= grp_fu_239_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        golden_ce0 = 1'b1;
    end else begin
        golden_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_convolution2D_fu_214_operator_q0 = vert_operator_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_convolution2D_fu_214_operator_q0 = horiz_operator_q0;
    end else begin
        grp_convolution2D_fu_214_operator_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_232_p0 = reg_271;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_232_p0 = tmp_i_i_i1_reg_728;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_232_p0 = tmp_8_reg_712;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_232_p0 = PSNR_fu_90;
    end else begin
        grp_fu_232_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_232_p1 = ap_const_lv64_4024000000000000;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_232_p1 = ap_const_lv64_3FDBCB7B1526E50E;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_232_p1 = tmp_8_reg_712;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_232_p1 = ap_const_lv64_3EB0000000000000;
    end else begin
        grp_fu_232_p1 = 'bx;
    end
end

always @ (*) begin
    if (((~(1'b0 == grp_convolution2D_fu_214_ap_done) & (1'b1 == ap_CS_fsm_state7)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~(1'b0 == grp_convolution2D_fu_214_ap_done) & (1'b1 == ap_CS_fsm_state7)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        input_r_ce0 = grp_convolution2D_fu_214_input_r_ce0;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) & ~(1'b0 == icmp_fu_501_p2))) begin
        output_r_address0 = sum7_cast_fu_533_p1;
    end else if (((1'b1 == ap_CS_fsm_state51) & (1'b0 == icmp_fu_501_p2))) begin
        output_r_address0 = sum9_cast_fu_520_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_address0 = tmp_cast_fu_292_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        output_r_address1 = sum_cast_fu_564_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_address1 = tmp_1_cast_fu_303_p1;
    end else begin
        output_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state51) & (1'b0 == icmp_fu_501_p2)) | ((1'b1 == ap_CS_fsm_state51) & ~(1'b0 == icmp_fu_501_p2)))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state53))) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) & ~(1'b0 == icmp_fu_501_p2))) begin
        output_r_d0 = ap_const_lv8_FF;
    end else if (((1'b1 == ap_CS_fsm_state51) & (1'b0 == icmp_fu_501_p2))) begin
        output_r_d0 = tmp_15_fu_507_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_d0 = ap_const_lv8_0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond5_fu_278_p2)) | ((1'b1 == ap_CS_fsm_state51) & (1'b0 == icmp_fu_501_p2)) | ((1'b1 == ap_CS_fsm_state51) & ~(1'b0 == icmp_fu_501_p2)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond5_fu_278_p2))) begin
        output_r_we1 = 1'b1;
    end else begin
        output_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond5_fu_278_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == exitcond3_fu_314_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == exitcond2_fu_325_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(1'b0 == grp_convolution2D_fu_214_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (~(1'b0 == grp_convolution2D_fu_214_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state52 : begin
            if ((exitcond1_fu_544_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state53 : begin
            if (~(1'b0 == exitcond_fu_550_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state108 = ap_CS_fsm[ap_const_lv32_6B];

assign ap_CS_fsm_state109 = ap_CS_fsm[ap_const_lv32_6C];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state139 = ap_CS_fsm[ap_const_lv32_8A];

assign ap_CS_fsm_state140 = ap_CS_fsm[ap_const_lv32_8B];

assign ap_CS_fsm_state145 = ap_CS_fsm[ap_const_lv32_90];

assign ap_CS_fsm_state146 = ap_CS_fsm[ap_const_lv32_91];

assign ap_CS_fsm_state151 = ap_CS_fsm[ap_const_lv32_96];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state49 = ap_CS_fsm[ap_const_lv32_30];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state50 = ap_CS_fsm[ap_const_lv32_31];

assign ap_CS_fsm_state51 = ap_CS_fsm[ap_const_lv32_32];

assign ap_CS_fsm_state52 = ap_CS_fsm[ap_const_lv32_33];

assign ap_CS_fsm_state53 = ap_CS_fsm[ap_const_lv32_34];

assign ap_CS_fsm_state54 = ap_CS_fsm[ap_const_lv32_35];

assign ap_CS_fsm_state55 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state60 = ap_CS_fsm[ap_const_lv32_3B];

assign ap_CS_fsm_state61 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_state66 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state67 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state71 = ap_CS_fsm[ap_const_lv32_46];

assign ap_CS_fsm_state72 = ap_CS_fsm[ap_const_lv32_47];

assign ap_CS_fsm_state77 = ap_CS_fsm[ap_const_lv32_4C];

assign ap_CS_fsm_state78 = ap_CS_fsm[ap_const_lv32_4D];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_return = grp_fu_232_p2;

assign exitcond1_fu_544_p2 = ((i_3_reg_191 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign exitcond2_fu_325_p2 = ((i_2_reg_179 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign exitcond3_fu_314_p2 = ((j_reg_167 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign exitcond5_fu_278_p2 = ((i_reg_156 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign exitcond_fu_550_p2 = ((j_1_reg_203 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign golden_address0 = sum_cast_fu_564_p1;

assign grp_convolution2D_fu_214_ap_start = ap_reg_grp_convolution2D_fu_214_ap_start;

assign grp_fu_247_p0 = $signed(tmp_6_reg_702);

assign i_1_fu_308_p2 = (i_reg_156 + ap_const_lv10_1);

assign i_4_fu_576_p2 = (i_3_reg_191 + ap_const_lv10_1);

assign i_5_fu_538_p2 = (i_2_reg_179 + ap_const_lv10_1);

assign icmp_fu_501_p2 = (($signed(tmp_14_fu_491_p4) > $signed(24'b000000000000000000000000)) ? 1'b1 : 1'b0);

assign input_r_address0 = grp_convolution2D_fu_214_input_r_address0;

assign isNeg_fu_400_p3 = sh_assign_fu_394_p2[ap_const_lv32_B];

assign j_2_fu_331_p2 = (j_reg_167 + ap_const_lv10_1);

assign j_3_fu_570_p2 = (j_1_reg_203 + ap_const_lv10_1);

assign loc_V_1_fu_374_p1 = p_Val2_1_fu_353_p1[51:0];

assign loc_V_fu_364_p4 = {{p_Val2_1_fu_353_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign output_r_d1 = ap_const_lv8_0;

assign p_Result_1_fu_378_p3 = {{1'b1}, {loc_V_1_fu_374_p1}};

assign p_Val2_1_fu_353_p1 = x_assign_2_reg_652;

assign p_Val2_4_fu_472_p3 = ((isNeg_fu_400_p3[0:0] === 1'b1) ? tmp_5_fu_458_p1 : tmp_7_fu_462_p4);

assign p_Val2_7_i_i_fu_480_p2 = (ap_const_lv32_0 - p_Val2_4_reg_662);

assign p_Val2_s_fu_485_p3 = ((p_Result_s_reg_657[0:0] === 1'b1) ? p_Val2_7_i_i_fu_480_p2 : p_Val2_4_reg_662);

assign p_fu_347_p2 = (grp_fu_341_p2 + grp_fu_337_p2);

assign sh_assign_1_cast_fu_426_p1 = $signed(sh_assign_1_fu_418_p3);

assign sh_assign_1_fu_418_p3 = ((isNeg_fu_400_p3[0:0] === 1'b1) ? tmp_i_i_cast_fu_414_p1 : sh_assign_fu_394_p2);

assign sh_assign_fu_394_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i_cast3_fu_390_p1));

assign sum7_cast_fu_533_p1 = sum7_fu_525_p3;

assign sum7_fu_525_p3 = {{i_2_reg_179}, {j_reg_167}};

assign sum9_cast_fu_520_p1 = sum9_fu_512_p3;

assign sum9_fu_512_p3 = {{i_2_reg_179}, {j_reg_167}};

assign sum_cast_fu_564_p1 = sum_fu_556_p3;

assign sum_fu_556_p3 = {{i_3_reg_191}, {j_1_reg_203}};

assign tmp_11_cast_fu_582_p1 = output_r_q1;

assign tmp_12_cast_fu_586_p1 = golden_q0;

assign tmp_13_fu_450_p3 = tmp_19_i_i_fu_438_p2[ap_const_lv32_34];

assign tmp_14_fu_491_p4 = {{p_Val2_s_fu_485_p3[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_15_fu_507_p1 = p_Val2_s_fu_485_p3[7:0];

assign tmp_18_i_i_cast_fu_434_p1 = $unsigned(sh_assign_1_cast_fu_426_p1);

assign tmp_18_i_i_fu_430_p1 = $unsigned(sh_assign_1_cast_fu_426_p1);

assign tmp_19_i_i_fu_438_p2 = p_Result_1_fu_378_p3 >> tmp_18_i_i_cast_fu_434_p1;

assign tmp_1_cast_fu_303_p1 = tmp_1_fu_297_p2;

assign tmp_1_fu_297_p2 = (tmp_fu_284_p3 | ap_const_lv20_3FF);

assign tmp_20_i_i_fu_444_p2 = tmp_i_i_fu_386_p1 << tmp_18_i_i_fu_430_p1;

assign tmp_5_fu_458_p1 = tmp_13_fu_450_p3;

assign tmp_6_fu_590_p2 = (tmp_11_cast_fu_582_p1 - tmp_12_cast_fu_586_p1);

assign tmp_7_fu_462_p4 = {{tmp_20_i_i_fu_444_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_cast_fu_292_p1 = tmp_fu_284_p3;

assign tmp_fu_284_p3 = {{i_reg_156}, {ap_const_lv10_0}};

assign tmp_i_i_11_fu_408_p2 = (ap_const_lv11_3FF - loc_V_fu_364_p4);

assign tmp_i_i_cast_fu_414_p1 = $signed(tmp_i_i_11_fu_408_p2);

assign tmp_i_i_fu_386_p1 = p_Result_1_fu_378_p3;

assign tmp_i_i_i_cast3_fu_390_p1 = loc_V_fu_364_p4;

endmodule //sobel
